name: first
services:
  backend1:
    image: first-backend:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/first_test
      SPRING_DATASOURCE_USERNAME: first_test_user
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      KEYCLOAK_REALM: First
      KEYCLOAK_CLIENT_ID: first-backend
      KEYCLOAK_CLIENT_SECRET: KrkUEGGw6DEsmXFTuXTVOuoh9058W8hm
      EUREKA_SERVER_URL: http://eureka-server:8761/eureka/
    depends_on:
      - postgres
      - keycloak
    networks:
      - backend
  
  backend2:
    image: first-backend:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/first_test
      SPRING_DATASOURCE_USERNAME: first_test_user
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      KEYCLOAK_REALM: First
      KEYCLOAK_CLIENT_ID: first-backend
      KEYCLOAK_CLIENT_SECRET: KrkUEGGw6DEsmXFTuXTVOuoh9058W8hm
      EUREKA_SERVER_URL: http://eureka-server:8761/eureka/
    depends_on:
      - postgres
      - keycloak
    networks:
      - backend

  eureka-server:
    image: first-eureka-server:latest
    ports:
      - "8761:8761"
    networks:
      - backend
  
  first-gateway:
    container_name: first-gateway
    image: first-gateway:latest
    environment:
      FIRST_BACKEND_NAME: first-backend
      FIRST_GATEWAY_PORT: 8080
      EUREKA_SERVER_URL: http://eureka-server:8761/eureka/
    ports:
      - "8088:8080"
    networks:
      - backend

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.3
    container_name: keycloak
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin

      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/first_test
      KC_DB_SCHEMA: keycloak_schema
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: 1234
    ports:
      - "8081:8080"
    command: start-dev
    networks:
      - backend

  postgres:
    image: postgres:17-trixie
    container_name: postgres
    shm_size: 128mb
    environment:
      POSTGRES_DB: first_test
      POSTGRES_USER: first_test_user
      POSTGRES_PASSWORD: 1234
    ports:
      - "5555:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql:ro
    networks:
      - backend

  jenkins:
    container_name: jenkins
    image: jenkins/jenkins:lts
    user: root
    ports:
      - "8082:8080"   # Jenkins UI
      - "50000:50000" # Jenkins agent comms
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # let Jenkins run docker

volumes:
  db_data:
  jenkins_home:

networks:
  backend:
    driver: bridge